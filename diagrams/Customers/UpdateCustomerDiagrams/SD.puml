@startuml

actor Mechanic

participant CustomerAccountController as "<<Controller>>\nCustomerAccountController"
participant CustomerAccountService as "<<Service>>\nCustomerAccountService"
participant CustomerAccountRepository as "<<Repository>>\nCustomerAccountRepository"
participant Database as "<<Database>>\nDatabase"
participant CustomerAccountRequestMapper as "<<Mapper>>\nCustomerAccountRequestMapper"

Mechanic -> CustomerAccountController: PUT /api/v1/customers/{customerId}
activate CustomerAccountController

CustomerAccountController -> CustomerAccountService: updateCustomerById(customerId, UpdatedRequest)
activate CustomerAccountService

CustomerAccountService -> CustomerAccountRepository: updateById(customerId, UpdatedRequest)
activate CustomerAccountRepository

CustomerAccountRepository -> Database: UPDATE customers SET ... WHERE id = customerId
activate Database

Database --> CustomerAccountRepository: UpdatedCustomerData

deactivate CustomerAccountRepository
deactivate Database

CustomerAccountService --> CustomerAccountController: UpdatedCustomerData

deactivate CustomerAccountService
CustomerAccountController --> Mechanic: Updated customer details

deactivate CustomerAccountController

@enduml

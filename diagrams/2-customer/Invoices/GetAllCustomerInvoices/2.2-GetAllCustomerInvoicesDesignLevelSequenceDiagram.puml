@startuml
title GetAllCustomerInvoices Integrated System Sequence Diagram

actor Customer

participant ReactApplication as "<<View>>\nReactApplication"
participant CustomerInvoicesPage as "<<View>>\nCustomerInvoicesPage"
participant InvoiceController as "<<Controller>>\nInvoiceController"
participant InvoiceService as "<<Service>>\nInvoiceService"
participant InvoiceServiceImpl as "<<Service>>\nInvoiceServiceImpl"
participant InvoiceRepository as "<<Repository>>\nInvoiceRepository"
participant Database as "<<Database>>\nDatabase"

Customer -> ReactApplication: Navigate to Invoices Page
activate ReactApplication

ReactApplication -> CustomerInvoicesPage: Render()
activate CustomerInvoicesPage

CustomerInvoicesPage -> InvoiceController: GET /api/v1/customers/{customerId}/invoices
activate InvoiceController

InvoiceController -> InvoiceService: getAllInvoicesByCustomerId(customerId)
activate InvoiceService

InvoiceService -> InvoiceServiceImpl: getAllInvoicesByCustomerId(customerId)
activate InvoiceServiceImpl

InvoiceServiceImpl -> InvoiceRepository: findAllInvoicesByCustomerId(String customerId)
activate InvoiceRepository

InvoiceRepository -> Database: SELECT * FROM invoices WHERE customerId = customerId
activate Database

Database --> InvoiceRepository: List<Invoice>
deactivate Database

InvoiceRepository --> InvoiceServiceImpl: List<Invoice>
deactivate InvoiceRepository

InvoiceServiceImpl --> InvoiceService: List<InvoiceResponseModel>
deactivate InvoiceServiceImpl

InvoiceService --> InvoiceController: List<InvoiceResponseModel>
deactivate InvoiceService

InvoiceController --> CustomerInvoicesPage: List<InvoiceResponseModel>
deactivate InvoiceController

CustomerInvoicesPage --> ReactApplication: Display Invoices
deactivate CustomerInvoicesPage

ReactApplication --> Customer: View Invoices
deactivate ReactApplication

@enduml

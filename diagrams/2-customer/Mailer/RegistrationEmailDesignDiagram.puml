@startuml

actor User

participant ReactApplication as "<<View>>\nReactApplication"
participant SignUpPage as "<<View>>\nSignUpPage"
participant AuthController as "<<Service>>\nAuthController"
participant UserService as "<<Backend>>\nUserService"
participant Database as "<<Database>>\nDatabase"
participant Mailer as "<<Service>>\nMailer"

User -> ReactApplication: Accesses sign-up page
activate ReactApplication

ReactApplication -> SignUpPage: render()
activate SignUpPage

User -> SignUpPage: Fills out signup form
SignUpPage -> AuthController: RegisterUser(userInfo)
activate AuthController

AuthController -> UserService: createUser(userInfo)
activate UserService

UserService -> Database: Insert new user
activate Database

Database --> UserService: User record created
deactivate Database

UserService --> AuthController: User created successfully
deactivate UserService

AuthController -> Mailer: sendRegistrationEmail(userInfo.email)
activate Mailer

Mailer --> AuthController: Email sent successfully
deactivate Mailer

AuthController -> SignUpPage: createSuccessResponse("User has been successfully registered")
activate SignUpPage

SignUpPage -> ReactApplication: display successful message
activate ReactApplication

ReactApplication --> User: Redirects to login page
deactivate ReactApplication

@enduml

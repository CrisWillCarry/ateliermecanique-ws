@startuml

actor User

participant ReactApplication as "<<View>>\nReactApplication"
participant LoginPage as "<<View>>\nLoginPage"
participant AuthController as "<<Service>>\nAuthController"
participant JavaSpringSecurity as "<<Backend>>\nJavaSpringSecurity"
participant Database as "<<Database>>\nDatabase"
participant JavaUtils as "<<Utils>>\nJavaUtils"

User -> ReactApplication: Accesses login page
activate ReactApplication

ReactApplication -> LoginPage: render()
activate LoginPage

User -> LoginPage: Enters credentials (email, password)
LoginPage -> AuthController: initiateLogin(email, password)
activate AuthController

AuthController -> JavaSpringSecurity: authenticate(email, password)
activate JavaSpringSecurity

JavaSpringSecurity -> Database: Query user by email
activate Database

Database --> JavaSpringSecurity: User details
deactivate Database

JavaSpringSecurity --> AuthController: User authenticated
deactivate JavaSpringSecurity

AuthController -> JavaUtils: generateToken(userId, username)
activate JavaUtils

JavaUtils --> AuthController: Token generated
deactivate JavaUtils

AuthController -> ReactApplication: Set token in session/storage
deactivate AuthController

ReactApplication --> User: Redirect to home/dashboard
deactivate ReactApplication
deactivate LoginPage

@enduml

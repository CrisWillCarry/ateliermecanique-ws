@startuml
title UpdateAppointmentStatus System Sequence Diagram (Admin)

actor Mechanic

participant AppointmentController as "<<Controller>>\nAppointmentController"
participant AppointmentService as "<<Service>>\nAppointmentService"
participant AppointmentRepository as "<<Repository>>\nAppointmentRepository"
participant Database as "<<Database>>\nDatabase"

Mechanic -> AppointmentController: PUT api/v1/appointments/{appointmentId}/updateStatus?isConfirm
activate AppointmentController

AppointmentController -> AppointmentService: updatedAppointmentStatus(appointmentId, isConfirm)
activate AppointmentService

AppointmentService -> AppointmentRepository: findAppointmentByAppointmentIdentifier_AppointmentId(appointmentId)
activate AppointmentRepository

AppointmentRepository -> Database: SELECT * appointment WHERE id = appointmentId
activate Database

Database --> AppointmentRepository: AppointmentDetails
deactivate Database

AppointmentRepository --> AppointmentService: AppointmentDetails
deactivate AppointmentRepository

AppointmentService -> AppointmentRepository: Save updated appointment
activate AppointmentRepository

AppointmentRepository -> Database: UPDATE appointments SET status = ... WHERE id = appointmentId
activate Database

Database --> AppointmentRepository: UpdateConfirmation
deactivate Database

AppointmentRepository --> AppointmentService: UpdateConfirmation
deactivate AppointmentRepository

AppointmentService --> AppointmentController: AppointmentResponseModel
deactivate AppointmentService

AppointmentController --> Mechanic: AppointmentResponseModel
deactivate AppointmentController
@enduml
